// 1. метод массива sort сортирует строки "из коробки", т.е. без доп. параметров
const name1 = ['Bob', 'Alex', 'Zoi', 'Jim']
console.log(name1.sort())

// 2. соритрует строки типа по "алфавиту" (unicode)
const name2 = ['Donald', 'aLex', 'Alex', 'aleX', 'Рома', 'андрей']
console.log(name2.sort())


console.log(name1)
// 3. работает мутабельно - сортирует массив на месте, изменяя исходный его (не делает копию)

console.log(name1.sort() === name1) //true
// 4. возращает ссылку на исходный массив

const numbers = [1000, 4, 22, 1, 680, 99, -1]
console.log(numbers.sort())

// 5. Необходимо передавать функцию сравнения (callback) в параметр sort
const compareFunc = (a, b) => { // по возрастанию
     // > 0 - надо переставить
    // <= 0 - порядок не меняем
    if (a > b) {
        return 999 // функция должна вернуть любое положительное число
    } else {
        return -1 // функция должна вернуть любое отрицатльное число
    }
}

const compareFunc = (a, b) => a - b // то же самое что и код выше, но короче!

console.log(numbers.sort(compareFunc))
// 6. Функция сравнения должна  возращать число > или < 0
// Если функция сравнения возращает положиельное число, то метод переходит к след.
//  2 цифрам, если отрицательное - то меняет местами

// 7. Изменить порядок сортиировки:
const compareFunc = (a, b) => b - a

console.log(numbers.reverse()) //или так









